name: "Deploy to dev"
description: "Docker 이미지를 만들어 ECR에 Push 하고 dev용 EC2에 배포한다."

inputs:
  repository:
    description: "Name of ECR Repository"
    required: true
  github-ref:
    description: "env.GITHUB_REF"
    required: true
  docker-context:
    description: "Docker context"
    required: false
    default: "./server"
  docker-file:
    description: "Docker file"
    required: false
    default: "./ci/Dockerfile"
  docker-target:
    description: "Docker target"
    required: false
    default: "dist"
  access-key-id:
    description: "Access Key Id of AWS"
    required: true
  secret-access-key:
    description: "Secret Access Key of AWS"
    required: true
  host:
    description: "Host of Dev EC2"
    required: true
  username:
    description: "Username of Dev EC2"
    required: true
  key:
    description: "SSH Private key of Dev EC2"
    required: true
  run-options:
    description: "Options for Docker run"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Set environment variables
      run: |
        echo repository = ${{ inputs.repository }}, github-ref = ${{ github.ref }}
        echo "GITHUB_REF=${{ inputs.github-ref }}" >> $GITHUB_ENV
      shell: bash

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set environment variables (with tag)
      if: ${{ startsWith(env.GITHUB_REF, 'refs/tags/') }}
      run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      shell: bash

    - name: Set environment variables (without tag)
      if: ${{ !startsWith(env.GITHUB_REF, 'refs/tags/') }}
      run: echo "RELEASE_TAG=dev" >> $GITHUB_ENV
      shell: bash

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.access-key-id }}
        aws-secret-access-key: ${{ inputs.secret-access-key }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.docker-file }}
        target: ${{ inputs.docker-target }}
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ env.RELEASE_TAG }}

    - name: Deploy to EC2
      if: ${{ !startsWith(env.GITHUB_REF, 'refs/tags/') }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        key: ${{ inputs.key }}
        script: |
          sudo docker rm -f ${{ inputs.repository }}
          sudo docker run --name ${{ inputs.repository }} ${{ inputs.run-options }} --env-file ${{ inputs.repository }}.env --pull=always -d ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ env.RELEASE_TAG }}
